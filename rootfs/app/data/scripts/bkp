#!/usr/bin/with-contenv bash
source=/app/easyepg
logpath=/config/logs
target=/config/backup
#declare -a providers=(0 1 2 3 4)

echo 
echo "Creating backup file..."
if [ -f ${source}/easyepg_backup.zip ]; then rm -rf ${source}/easyepg_backup.zip; fi
/bin/bash /app/easyepg/backup.sh
echo "...Done"
echo 
echo "Looking for backup location..."
echo
if [ ! -d ${target} ]; then
    echo "-> ...not found."
    echo "-> Please Restart Container to reinitialize environment."
    echo "$(date) --> Error - Default backup location not found. Restart Container to to reinitialize environment." >> $logpath/juggler.log
else
    echo "-> BackUp Cycle - Started"
    echo "$(date) --> BackUp Cycle - Started" >> $logpath/juggler.log
    if [ "$(ls -A $target)" ]; then #i PRIOR VERSION EXISTS
        if [ -f ${target}/easyepg_backup.ver1 ] && [ ! -f ${target}/easyepg_backup.ver2 ] && [ ! -f ${target}/easyepg_backup.ver3 ]; then #i VERSION 1 EXIST
            echo "--> VERSION 1 found. No VERSION 2 and 3 existing. Bumping VERSION 1 to VERSION 2 and backing up new VERSION 1"
            echo "$(date) --> VERSION 1 found. No VERSION 2 and 3 existing. Bumping VERSION 1 to 2 and backing up new VERSION 1" >> $logpath/juggler.log
            mv $target/easyepg_backup.ver1 $target/easyepg_backup.ver2
            cp $source/easyepg_backup.zip $target/easyepg_backup.ver1
            rm -rf $source/easyepg_backup.zip
            echo "-> BackUp Cycle - Completed"
            echo "$(date) --> BackUp Cycle - Completed" >> $logpath/juggler.log
            rm -rf $source/easyepg_backup.zip
        elif [ -f ${target}/easyepg_backup.ver1 ] && [ -f ${target}/easyepg_backup.ver2 ] && [ ! -f ${target}/easyepg_backup.ver3 ]; then #i VERSION 1 AND 2 EXIST
            echo "--> VERSION 1 and 2 found. No VERSION 3 existing. Bumping VERSION 1 to 2, 2 to 3 and backing up new VERSION 1"
            echo "$(date) --> VERSION 1 and 2 found. No VERSION 3 existing. Bumping VERSION 1 to 2, 2 to 3 and backing up new VERSION 1" >> $logpath/juggler.log
            mv $target/easyepg_backup.ver2 $target/easyepg_backup.ver3
            mv $target/easyepg_backup.ver1 $target/easyepg_backup.ver2
            cp $source/easyepg_backup.zip $target/easyepg_backup.ver1
            rm -rf $source/easyepg_backup.zip
            echo "-> BackUp Cycle - Completed"
            echo "$(date) --> BackUp Cycle - Completed" >> $logpath/juggler.log
        elif [ -f ${target}/easyepg_backup.ver1 ] && [ -f ${target}/easyepg_backup.ver2 ] && [ -f ${target}/easyepg_backup.ver3 ]; then #i VERSION 1, 2 AND 3 EXIST
            echo "--> VERSION 1, 2 and 3 found. Bumping VERSION 1 to 2, 2 to 3, 3 to 4 and backing up new VERSION 1. Then VERSION 4 will be deleted."
            echo "$(date) --> VERSION 1, 2 and 3 found. Bumping VERSION 1 to 2, 2 to 3, 3 to 4 and backing up new VERSION 1. Then VERSION 4 will be deleted." >> $logpath/juggler.log
            mv $target/easyepg_backup.ver3 $target/easyepg_backup.ver4
            mv $target/easyepg_backup.ver2 $target/easyepg_backup.ver3
            mv $target/easyepg_backup.ver1 $target/easyepg_backup.ver2
            cp $source/easyepg_backup.zip $target/easyepg_backup.ver1
            rm -rf $target/easyepg_backup.ver4
            rm -rf $source/easyepg_backup.zip
            echo "-> BackUp Cycle - Completed"
            echo "$(date) --> BackUp Cycle - Completed" >> $logpath/juggler.log
        else
            echo "-> No valid environment found. Please run -> ee bkp reset"
            echo "$(date) --> Error - No valid environment found. Please run -> ee bkp reset" >> $logpath/juggler.log
        fi
    else #i NO PRIOR VERSION EXISTS
        echo "--> No prior VERSION found. Backing up as VERRION1."
        echo "$(date) ---> No prior VERSION found. Backing up as VERRION1." >> $logpath/juggler.log
        cp $source/easyepg_backup.zip $target/easyepg_backup.ver1
        echo "-> BackUp Cycle - Completed"
        echo "$(date) --> BackUp Cycle - Completed" >> $logpath/juggler.log
        rm -rf $source/easyepg_backup.zip
    fi
fi